<?php
namespace App\Http\Controllers\API;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\Product;
use App\Color;
use App\country;
use App\state;
use App\Size;
use App\Http\SVG\Svg;
use App\Http\SVG\arrayUtilities;
use App\Http\SVG\lotSVGHelper;
use File;
class ServicesController extends Controller
{
    public function getColors()
    {
        $Colors = Color::orderBy('position')->get();
        return response()->json(['data'=>$Colors],200);
    }
    public function getProduct($id)
    {
        $Product = Product::where('shopify_id',$id)->first();
        if($Product)
        {
            $data = [
                'name'       => $Product->name,
                'url_svg'    => $Product->url_svg,
                'svg_info'   => arrayUtilities::setInfo( json_decode($Product->svg_info, true)),
                'shopify_id' => (string)$Product->shopify_id,
                'dataExtra'  => arrayUtilities::jsonData(json_decode($Product->svg_info, true))
            ];
            return response()->json(['data'=>$data],200);
        }else
        {
            return response()->json(['data'=>'not found'],200);
        }
    }
    public function image(Request $request)
    {
        $product = Product::where('shopify_id',$request->productId)->first();
        $svgData = [];
        if($product->svg_info != '')
        {
            $svgData = json_decode($product->svg_info,true);
        }
        $color = [];
        foreach ($request->customColor as $key => $value) {
            $color[$key] = $value;
            $svgData = LotSVGHelper::changeSvgClass($svgData,$key,$value);   
        }
        $tempFile = 'svgTemp/'.$product->url_svg.'-'.md5(microtime(true));
        File::copy('jerseys/'.$product->url_svg.'.svg', 'jerseys/'.$tempFile.'.svg');
        if(SVG::updateStyleSVG($tempFile,$svgData))
        {
            return response()->json(['data'=>$tempFile]);
        }
    }
    public function getCountryStates()
    {
        $Countries = Country::all();
        $data = [];
        foreach ($Countries as $key => $country) {
            $data[] = [
                'name'   => ucfirst($country->name),
                'states' => $country->states,
            ];
        }

        return response()->json(['data'=>$data]);
    }
    public function getSizes()
    {
        $Sizes = Size::all();

        return response()->json(['data'=>$Sizes]);
    }

}
